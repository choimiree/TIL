#상호는 전차로 시가전을 하는 것을 테마로 한 새로운 게임 "배틀필드"를 개발하기로 했다.
#그래서 먼저 간단하게 프로토 타입 게임을 만들었따.
#이 프로토타입에서 등장하는 전차는 사용자의 전차 하나뿐이며, 적이나 아군으로 만들어진 전차는 등장하지 않는다.
#사용자의 전차는 사용자의 입력에 따라 격자판으로 이루어진 게임 맵에서 다양한 동작을 한다.
#다음 표는 게임 맵의 구성 요소를 나타낸다.
#문자의미
#다음표는 사용자가 넣을 수 있는 입력의 종류를 나타낸다.
#문자동작
#전차가 이동을 하려고 할 때, 만약 게임 맵 밖이라면 전차는 당연히 이동하지 않는다.
#전차가 포탄을 발사하면, 포탄은 벽돌로 만드러진 벽 또는 강철로 만들어진 벽에 충돌하거나 게임 맵 밖으로 나갈 때까지 직지ㄴ한다.
#만약 포탄이 벽에 부딪히면 포탄은 소멸하고, 부딪힌 벽이 벽돌로 만들어진 벽이라면 이 벽은 파괴되어 칸은 평지가 된다.
#강철로 만들어진 벽에 포탄이 부딪히면 아무 일도 일어나지 않는다.
#게임 맵 밖으로 포탄이 나가면 아무런 일도 일어나지 않는다.
#초기 게임 맵의 상태와 사용자가 넣을 입력이 순서대로 주어질 때, 모든 입력을 처리하고 나면 게임 맵의 상태가 어떻게 구현되는지 구하는 프로그램을 작성하라.

#S는 사격
#UDLR은 방향

#두정수 H,W(2<=H,W<=20)
#맵의 높이가 H, 너비가 W
#H개의 각각의 줄에는 길이가 W인 문자열이 주어진다.
#다음줄에는 입력의 개수 나타내는 정수 N(0~100)
#다음줄에는 길이가 N인 문자열

#문자열을 수정할 수 있는 상태인 list로 쪼개로 해야됨

#U D L R S
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]
cmd = {'U':0, 'D':1, 'L':2, 'R':3, 'S':4}
tank = '^v<>'

for tc in range(1, int(input()) + 1):
    W, H = map(int, input().split())
    x = y = d = 0
    MAP = [] #탱크의 위치
    for i in range(H):
        MAP.append(list(input())) #변경하기 위해
        for j in range(W):
            if MAP[i][j] in tank:
                x, y = i, j
                d = tank.index(MAP[i][j])
    N = int(input())
    cmdStr = input() #명령의 문자열
    #명령순으로 처리
    for c in cmdStr:
        if cmd[c] == 4: #사격
            #현재위치 x,y, 방향=d
            tx, ty = x + dx[d], y + dy[d]
            while 0 <= tx < H and 0 <= ty < W:
                #포탄이 날아가다가 경계를 벗어나면 끝나고
                #강철벽을 만나면 중단
                if MAP[tx][ty] == '#': break
                #벽돌벽을 만나면 부셔져야되니까 평지로 만들고 중단
                if MAP[tx][ty] == '*': MAP[tx][ty] == '.'; break
                tx, ty = tx + dx[d], ty + dy[d]
        else:           #이동
            #방향을 전환한다.
            #그 방향으로 전진한다. 만약 경계 밖, 벽, 물이면 안돼..
            d = cmd[c]
            MAP[x][y] = tank[d]
            tx,ty=x+dx[d], y+dy[d]
            if tx < 0 or tx == H or ty<0 or ty == W: continue
            if MAP[tx][ty] == '.'
                MAP[tx][ty] = tank[d]
                MAP[x][y] = '.'
                x, y = tx, ty

